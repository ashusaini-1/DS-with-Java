
//Iterative


class Solution
{
    public static Node reverse(Node head, int k)
    {
        //Your code here
        Node prev=null;
        Node curr=head;
        Node next=null;
        
        int count=0;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
            count++;
        }
        
        if(next!=null){
            head.next=reverse(next,k);
        }
        
        return prev;
        
        
    }
}

//recursive

class Solution
{
    //Function to reverse a linked list.
    Node reverseList(Node head)
    {
        if(head==null|| head.next==null){
            return head;
            }
        
        Node newHead=reverseList(head.next);
        
        Node HeadNext=head.next;
        
        HeadNext.next=head;
        head.next=null;
        
        
        return newHead;
        
        
        
        
        
        
        
        // code here
       /* Node prev=null;
        Node curr=head;

        
        while(curr!=null){
            Node temp=curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
            
            
            
        }
        
        return prev;
        */
        
     }
}

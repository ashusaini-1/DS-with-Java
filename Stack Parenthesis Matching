package com.company;


class Stacker{

    int top;
    int size;
    int arr[];

    Stacker(int size){
        this.arr=new int[size];
        this.size=size;
        this.top=-1;


    }


    public void push(int data){
        if(!isFull()){
            top++;
            arr[top]=data;
        }
        else{
            System.out.println("Stack is overflow");
        }
    }

    public int pop(){
        if(!isEmpty()){
            int returned=top;
            top--;
            return arr[returned];


        }
        else{
            System.out.println("Stack is underflow");
            return -1;

        }


    }

    public int peek(){
        if(!isEmpty()){
            return arr[top];
        }
        else{

            System.out.println("Stack is underflow");
            return -1;
        }
    }


    public boolean isEmpty(){
        return (top==-1);


    }

    public boolean isFull(){
        return (top==size-1);


    }

    public boolean isValid(String s) {

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (ch == '(' || ch == '{' || ch == '[') {
                push(ch);
            } else if (isEmpty()) {
                return false;

            } else if (ch == ')' && pop() != '(') {
                return false;

            } else if (ch == ']' && pop() != '[') {
                return false;

            } else if (ch == '}' && pop() != '{') {
                return false;
            }


        }
        return isEmpty();

    }
}

public class stackValidParenthis {


    public static void main(String args[]){
        Stacker obj=new Stacker(12);

String str="[{}]";
boolean vs=obj.isValid(str);
        System.out.println(vs);

    }
}

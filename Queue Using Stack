package com.company;

import java.util.Stack;

class Queue{
    
    
    Stack<Integer>s1,s2;
    
    public Queue(){
        s1=new Stack<>();
        s2=new Stack<>();
        
        
    }
    
     public void push(int x) {
        s1.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        while(s1.size() > 1){
            s2.push(s1.pop());
        }
        int ans = s1.pop();
        while(!s2.isEmpty()) {
            s1.push(s2.pop());
        }
        return ans;
    }
    
    /** Get the front element. */
    public int peek() {
        while(s1.size() > 1){
            s2.push(s1.pop());
        }
        int ans = s1.peek();
        while(!s2.isEmpty()) {
            s1.push(s2.pop());
        }
        return ans;
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return s1.isEmpty();
    }
    
}


public class QueueUsingStack {



    public static void main(String args[]){




    }
}

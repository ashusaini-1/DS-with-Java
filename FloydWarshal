package com.company;


//GFG


public class FloydWarshal {

final static int INF=99999,v=4;


static void floydwarshall(int graph[][]){

    int dist[][]=new int [v][v];
    int i,j,k;


    for(i=0;i<v;i++){

        for(j=0;j<v;j++){
            dist[i][j]=graph[i][j];
        }

    }

for(k=0;k<v;k++){

    for(i=0;i<v;i++){

        for(j=0;j<v;j++){

            if(dist[i][k]+dist[k][j]<dist[i][j])
                dist[i][j] = dist[i][k] + dist[k][j];
        }
    }

}

    printSolution(dist);

}

    static void printSolution(int dist[][])
    {
        System.out.println("The following matrix shows the shortest "+
                "distances between every pair of vertices");
        for (int i=0; i<v; ++i)
        {
            for (int j=0; j<v; ++j)
            {
                if (dist[i][j]==INF)
                    System.out.print("INF ");
                else
                    System.out.print(dist[i][j]+"   ");
            }
            System.out.println();
        }
    }


    public static void main(String args[]){



        int graph[][] = { {0,   5,  INF, 10},
                {INF, 0,   3, INF},
                {INF, INF, 0,   1},
                {INF, INF, INF, 0}
        };



    }


}
